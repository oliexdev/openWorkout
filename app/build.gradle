/*
 * Copyright (C) 2020 olie.xdev <olie.xdev@googlemail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

apply plugin: 'com.android.application'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.health.openworkout"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 14
        versionName "1.3.1"
        archivesBaseName = "openWorkout-$versionName"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildFeatures {
            buildConfig = true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }


    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file("../openWorkout.keystore")
            def keystoreProperties = new Properties()
            try {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            } catch(FileNotFoundException ex) {
                keystoreProperties = null;
            }

            if (keystoreProperties != null) {
                storeFile file(rootDir.getCanonicalPath() + '/' + keystoreProperties['releaseKeyStore'])
                keyAlias keystoreProperties['releaseKeyAlias']
                keyPassword keystoreProperties['releaseKeyPassword']
                storePassword keystoreProperties['releaseStorePassword']
            }
        }

        playStore {
            def keystorePlayStorePropertiesFile = rootProject.file("../openWorkout_playstore.keystore")
            def keystorePlayStoreProperties = new Properties()
            try {
                keystorePlayStoreProperties.load(new FileInputStream(keystorePlayStorePropertiesFile))
            } catch(FileNotFoundException ex) {
                keystorePlayStoreProperties = null;
            }

            if (keystorePlayStoreProperties != null) {
                storeFile file(rootDir.getCanonicalPath() + '/' + keystorePlayStoreProperties['releaseKeyStore'])
                keyAlias keystorePlayStoreProperties['releaseKeyAlias']
                keyPassword keystorePlayStoreProperties['releaseKeyPassword']
                storePassword keystorePlayStoreProperties['releaseStorePassword']
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            shrinkResources true
            minifyEnabled true
           // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            // don't include version number into the apk filename for debug build type so GitHub CI can find it
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    if (variant.buildType.name == "debug") {
                        outputFileName = "openWorkout-debug.apk"
                    }
                }
            }
        }
    }

    flavorDimensions "default"

    productFlavors {
        fdroid {
            dimension "default"
            signingConfig signingConfigs.release
        }

        playStore {
            dimension "default"
            signingConfig signingConfigs.playStore
        }
    }

    namespace 'com.health.openworkout'
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Google libraries
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.navigation:navigation-fragment:2.8.4'
    implementation 'androidx.navigation:navigation-ui:2.8.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'

    // GSon
    implementation 'com.google.code.gson:gson:2.10.1'

    // CustomActivityOnCrash
    implementation 'cat.ereza:customactivityoncrash:2.3.0'

    // Timber log library
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Room library
    implementation 'androidx.room:room-runtime:2.6.1'

    // Test environment
    annotationProcessor 'androidx.room:room-compiler:2.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // Debug SQL DB use adb forward tcp:8080 tcp:8080 --> localhost:8080
    //debugImplementation 'com.amitshekhar.android:debug-db:1.0.7'

    // Ad sense
    playStoreImplementation 'com.google.android.gms:play-services-ads:23.5.0'

    // Google billing
    playStoreImplementation 'com.android.billingclient:billing:7.1.1'
}
